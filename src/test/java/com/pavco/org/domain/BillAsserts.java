package com.pavco.org.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BillAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillAllPropertiesEquals(Bill expected, Bill actual) {
        assertBillAutoGeneratedPropertiesEquals(expected, actual);
        assertBillAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillAllUpdatablePropertiesEquals(Bill expected, Bill actual) {
        assertBillUpdatableFieldsEquals(expected, actual);
        assertBillUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillAutoGeneratedPropertiesEquals(Bill expected, Bill actual) {
        assertThat(expected)
            .as("Verify Bill auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillUpdatableFieldsEquals(Bill expected, Bill actual) {
        assertThat(expected)
            .as("Verify Bill relevant properties")
            .satisfies(e -> assertThat(e.getUuid()).as("check uuid").isEqualTo(actual.getUuid()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getNotes()).as("check notes").isEqualTo(actual.getNotes()))
            .satisfies(e -> assertThat(e.getTotal()).as("check total").isEqualTo(actual.getTotal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBillUpdatableRelationshipsEquals(Bill expected, Bill actual) {
        assertThat(expected)
            .as("Verify Bill relationships")
            .satisfies(e -> assertThat(e.getClient()).as("check client").isEqualTo(actual.getClient()));
    }
}
